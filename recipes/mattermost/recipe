#!/bin/bash
#
# Copyright 2021 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH
#
# Author:
#   Christopher Huhn <c.huhn@gsi.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

EDITION="team"
VERSION="5.31"

while :; do
    case "$1" in
        --archive)
            ARCHIVE="$2"
            ;;
        --version)
            VERSION="$2"
            ;;
        --checksum)
            CHECKSUM="$2"
            ;;
        --edition)
            EDITION="$2"
            ;;
        *)
            break
    esac
    shift 2
done

MM_VERSIONS=$(mktemp)

"$RECIPE_DIR/mm_versions" > "$MM_VERSIONS"

# turn a version prefix (M, M., M.m, M.m., M.m.p) into the highest matching full version major.minor.point
get_version() {
    local EDITION=$1
    local VERSION_PREFIX=$2
    # TODO: query assumes that the version list is sorted in descending order

    if ! expr "$VERSION_PREFIX" : '[0-9]\+\.[0-9]\+\.[0-9]\+' > /dev/null; then
        # if $VERSION is not a full version (M.m.p 
        VERSION_PREFIX="${VERSION_PREFIX%.}."
    fi

    local JQ_FILTER=".$EDITION | map(select(.version|startswith(\"${VERSION_PREFIX}\")))|first|.version"

    jq -r "$JQ_FILTER" < "$MM_VERSIONS"
}

# determine the exact version:
VERSION=$(get_version "$EDITION" "$VERSION")

get_checksum() {
    local EDITION=$1
    local VERSION=$2
    local JQ_FILTER=".$EDITION | map(select(.version == \"${VERSION}\"))[]"
    jq -r "$JQ_FILTER.checksum" < "$MM_VERSIONS"
}

get_url() {
    local EDITION=$1
    local VERSION=$2
    local JQ_FILTER=".$EDITION | map(select(.version == \"${VERSION}\"))[]"
    jq -r "$JQ_FILTER.url" < "$MM_VERSIONS"
}

# download the tarball:
if [ -z "$ARCHIVE" ]; then
    URL=$(get_url "$EDITION" "$VERSION")
    ARCHIVE="$(fetch "$URL")"
fi

# verify the checksum:
[ "$CHECKSUM" ] || CHECKSUM=$(get_checksum "$EDITION" "$VERSION")

if [ "$CHECKSUM" ]; then
    check_sha256sum "$ARCHIVE" "$CHECKSUM"
fi

# TODO: also check the GPG signature of the ARCHIVE

extract "$ARCHIVE"

PKG_DIR="$BUILD_DIR/mattermost"

# fix the log file location in config.json in-place:
jq '.LogSettings.FileLocation="/var/log/mattermost/"' \
   "$PKG_DIR/config/config.json" | sponge "$PKG_DIR/config/config.json"

find "$PKG_DIR/client" -type f -exec chmod -c a-x {} \;

debut_dh_make -p "mattermost-server_${VERSION}"

add_debian_files

build_package

drop_result
