#!/bin/sh
#
# extract ICAclient package and repack it to be suitable for GSI
#
# $Id: ica_repack 18509 2012-10-30 17:38:31Z christo $
# 

#REVISION=1
# TARGET_RELEASE=`lsb_release -cs`
# ARCH=`dpkg-architecture -qDEB_HOST_ARCH`

# while getopts "v:t:a:" OPTION; do
#     case $OPTION in 
#         a)
#             ARCH=$OPTARG
#             ;;
#         t)
#             TARGET_RELEASE=$OPTARG
#             ;;
#     esac
# done

# shift $(($OPTIND - 1))


PKG=$1

# Does not work, needs manual download
#if [ -z $PKG ]; then
#    PKG=`fetch https://downloads.citrix.com/akdlm/8618/icaclient_13.0.0.256735_amd64.deb`
#fi

#extract "$ARCHIVE"

[ $PKG ] || abort Need an archive to extract icaclient

# icaclient comes as a Debian package but we repackage it: 
PKG_NAME=`dpkg-deb -I $PKG | sed -ne "s/ Package: //p"`

# determine version, add dbtnt suffix if missing:
VERSION=`dpkg-deb -I $PKG | sed -ne "s/ Version: //p"`
if ! expr "$VERSION" : ".*+dbtnt\.[0-9]\+$" > /dev/null; then
    VERSION="${VERSION}+dbtnt.${REVISION}"
fi

PKG_DIR="$BUILD_DIR/${PKG_NAME}-${VERSION}"

extract $PKG $PKG_DIR

# create package skeleton:
debut_dh_make

add_debian_files

# not all dependencies are resolvable (on Wheezy)
#echo "override_dh_shlibdeps:" >> ${PKG_DIR}/debian/rules

# keep the original copyright
cp $PKG_DIR/usr/share/doc/icaclient/copyright         $PKG_DIR/debian/

# append the original changelog:
zcat $PKG_DIR/usr/share/doc/icaclient/changelog.gz >> $PKG_DIR/debian/changelog

# modify the extracted debian/control:
( 
    cat <<EOF 
Source: icaclient
Build-depends: ia32-libs-gtk, libmotif4, libspeex1
Maintainer: $DEBFULLNAME <$DEBEMAIL>

EOF
    grep -v "^\(Version\|Maintainer\|Installed-Size\): .*" $PKG_DIR/DEBIAN/control 
) > $PKG_DIR/debian/control 

#build_architecture i386

# Squeeze/AMD64 needs a 32bit libmotif:
if [ "$TARGET_RELEASE" = "squeeze" -a "$ARCH" = "amd64" ]; then
    add_dependency ia32-libmotif4 nspluginwrapper
else
    add_dependency libmotif4
fi

# Fix paths
sed -e "s|opt/Citrix/ICAClient|usr/lib/ICAClient|g" $PKG_DIR/usr/share/menu/icaclient > $PKG_DIR/debian/menu
sed -i -e "s|opt/Citrix/ICAClient|usr/lib/ICAClient|g" $PKG_DIR/usr/share/applications/*desktop

# TODO: hook in our ca certs:
#cp -v /usr/local/share/ca-certificates/*crt \
#    $PKG_DIR/usr/lib/ICAClient/keystore/cacerts

rm -r $PKG_DIR/opt/Citrix/ICAClient/keystore/cacerts

# we need some links for icaclient to work
cat <<EOF > $PKG_DIR/debian/links
/etc/icaclient/nls/en     /etc/icaclient/nls/current
/usr/lib/ICAClient/wfcmgr /usr/bin/wfcmgr
/etc/ssl/certs            /usr/lib/ICAClient/keystore/cacerts
EOF

# more links ...
for ini in `ls $PKG_DIR/etc/icaclient/nls/en/*.ini | xargs -n1 basename`; do
    echo /etc/icaclient/nls/current/${ini} /usr/lib/ICAClient/config/${ini} >> $PKG_DIR/debian/links
done

# move pkg install scripts out of the way for now:
#disable_install_scripts

# # install the plugin:
# case $ARCH in
#     i386)
#         # create a link for the plugin (i386 only)
#         mkdir -p $PKG_DIR/usr/lib/iceweasel/plugins
#         ln -vs /usr/lib/ICAClient/npica.so $PKG_DIR/usr/lib/iceweasel/plugins
#         ;;
#     amd64)

#         if [ "$TARGET_RELEASE" = "squeeze" ]; then
#         # we have to wrap the plugin at install time:
#             cat <<-EOF >> $PKG_DIR/DEBIAN/postinst
# nspluginwrapper -i /usr/lib/ICAClient/npica.so
# EOF
        
#         # remove the nspluginwrapper'd plugins
#             cat <<-EOF >> $PKG_DIR/DEBIAN/postrm
# for i in \`nspluginwrapper -l | grep npwrapper.npica\`
# do
#     test -e \$i && nspluginwrapper -r \$i 2>/dev/null
# done
# EOF
#         fi
#         ;;
# esac


#### 
#
# finish it up
#

build_package

drop_result

